// Mocks generated by Mockito 5.0.17 from annotations
// in simple_news/test/data/repository/my_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:simple_news/data/remote/remote_data_source.dart' as _i4;
import 'package:simple_news/data/remote/response/news_response.dart' as _i2;
import 'package:simple_news/domain/model/article.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeNewsResponse_0 extends _i1.Fake implements _i2.NewsResponse {}

class _Fake$NewsResponseCopyWith_1<$Res> extends _i1.Fake
    implements _i2.$NewsResponseCopyWith<$Res> {}

class _FakeSource_2 extends _i1.Fake implements _i3.Source {}

class _Fake$ArticleCopyWith_3<$Res> extends _i1.Fake
    implements _i3.$ArticleCopyWith<$Res> {}

class _Fake$ArticleResponseCopyWith_4<$Res> extends _i1.Fake
    implements _i2.$ArticleResponseCopyWith<$Res> {}

class _FakeArticle_5 extends _i1.Fake implements _i3.Article {}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i4.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.NewsResponse> fetchNews(
          {int? page, int? pageSize, String? q}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #fetchNews, [], {#page: page, #pageSize: pageSize, #q: q}),
              returnValue:
                  Future<_i2.NewsResponse>.value(_FakeNewsResponse_0()))
          as _i5.Future<_i2.NewsResponse>);
}

/// A class which mocks [NewsResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsResponse extends _i1.Mock implements _i2.NewsResponse {
  MockNewsResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.$NewsResponseCopyWith<_i2.NewsResponse> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$NewsResponseCopyWith_1<_i2.NewsResponse>())
          as _i2.$NewsResponseCopyWith<_i2.NewsResponse>);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}

/// A class which mocks [Article].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticle extends _i1.Mock implements _i3.Article {
  MockArticle() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Source get source => (super.noSuchMethod(Invocation.getter(#source),
      returnValue: _FakeSource_2()) as _i3.Source);
  @override
  String get author =>
      (super.noSuchMethod(Invocation.getter(#author), returnValue: '')
          as String);
  @override
  String get title =>
      (super.noSuchMethod(Invocation.getter(#title), returnValue: '')
          as String);
  @override
  String get description =>
      (super.noSuchMethod(Invocation.getter(#description), returnValue: '')
          as String);
  @override
  String get url =>
      (super.noSuchMethod(Invocation.getter(#url), returnValue: '') as String);
  @override
  String get urlToImage =>
      (super.noSuchMethod(Invocation.getter(#urlToImage), returnValue: '')
          as String);
  @override
  String get publishedAt =>
      (super.noSuchMethod(Invocation.getter(#publishedAt), returnValue: '')
          as String);
  @override
  String get content =>
      (super.noSuchMethod(Invocation.getter(#content), returnValue: '')
          as String);
  @override
  _i3.$ArticleCopyWith<_i3.Article> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$ArticleCopyWith_3<_i3.Article>())
          as _i3.$ArticleCopyWith<_i3.Article>);
}

/// A class which mocks [ArticleResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleResponse extends _i1.Mock implements _i2.ArticleResponse {
  MockArticleResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.$ArticleResponseCopyWith<_i2.ArticleResponse> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue:
                  _Fake$ArticleResponseCopyWith_4<_i2.ArticleResponse>())
          as _i2.$ArticleResponseCopyWith<_i2.ArticleResponse>);
  @override
  _i3.Article toDomain() =>
      (super.noSuchMethod(Invocation.method(#toDomain, []),
          returnValue: _FakeArticle_5()) as _i3.Article);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
